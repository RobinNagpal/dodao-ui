{
  "icon_bg_color": null,
  "user_id": "0be3e4c3-3b27-440f-81e4-921ccf9df0b3",
  "gradient": null,
  "icon": null,
  "is_component": true,
  "tags": null,
  "updated_at": "2025-03-05T12:05:13+00:00",
  "locked": false,
  "webhook": false,
  "folder_id": "00af9b7e-c33a-4fbf-8396-9739dbc109f2",
  "endpoint_name": null,
  "description": "Parses JSON payload or returns the raw string.",
  "id": "882f228e-542a-461f-8f06-e7ed31661e2a",
  "name": "JSON Payload",
  "data": {
    "edges": [],
    "nodes": [
      {
        "data": {
          "node": {
            "template": {
              "_type": "Component",
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "import json\r\nfrom langflow.custom import Component\r\nfrom langflow.io import MultilineInput, Output\r\nfrom langflow.schema import Data\r\n\r\nclass JSONPayloadComponent(Component):\r\n    display_name = \"JSON Payload\"\r\n    description = \"Parses JSON payload or returns the raw string.\"\r\n    name = \"JSONPayload\"\r\n    icon = \"code\"\r\n\r\n    inputs = [\r\n        MultilineInput(\r\n            name=\"input_payload\",\r\n            display_name=\"Payload\",\r\n            info=\"Paste your JSON or raw payload here\",\r\n        )\r\n    ]\r\n    outputs = [\r\n        Output(display_name=\"Data\", name=\"parsed_data\", method=\"build_data\"),\r\n    ]\r\n\r\n    def build_data(self) -> Data:\r\n        if not self.input_payload:\r\n            # If nothing was entered\r\n            self.status = \"No data provided.\"\r\n            return Data(data={})\r\n        try:\r\n            # Try to load the payload as JSON\r\n            body = json.loads(self.input_payload)\r\n            self.status = \"JSON parsed successfully.\"\r\n        except json.JSONDecodeError:\r\n            # If it's not valid JSON, just wrap the string\r\n            body = {\"payload\": self.input_payload}\r\n            self.status = \"Invalid JSON; returning raw string.\"\r\n        return Data(data=body)\r\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "input_payload": {
                "tool_mode": false,
                "trace_as_input": true,
                "multiline": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "list_add_label": "Add More",
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "input_payload",
                "value": "{\n      \"key\": \"debt\",\n      \"name\": \"Debt\",\n      \"shortDescription\": \"Evaluates the company's debt\",\n      \"importantMetrics\": [\n        {\n          \"key\": \"revenue_growth\",\n          \"name\": \"Revenue Growth\",\n          \"description\": \"Measures the increase in a company's sales over a specific period.\",\n          \"formula\": \"(current_period_revenue - previous_period_revenue) / previous_period_revenue\"\n        },\n        {\n          \"key\": \"net_income_margin\",\n          \"name\": \"Net Income Margin\",\n          \"description\": \"Indicates the percentage of revenue that remains as profit after all expenses are deducted.\",\n          \"formula\": \"net_income / total_revenue\"\n        },\n        {\n          \"key\": \"funds_from_operations\",\n          \"name\": \"Funds From Operations (FFO)\",\n          \"description\": \"A key performance indicator for REITs, reflecting cash generated from operations.\",\n          \"formula\": \"net_income + depreciation + amortization - gains on sales\"\n        }\n      ],\n      \"reports\": [\n        {\n          \"key\": \"financial_summary_report\",\n          \"name\": \"Financial Summary Report\",\n          \"description\": \"Provides a comprehensive overview of the company's financial performance, including revenue growth, net income margin, and FFO.\",\n          \"outputType\": \"Text\"\n        }\n      ]\n }\n",
                "display_name": "Payload",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "Paste your JSON or raw payload here",
                "title_case": false,
                "type": "str",
                "_input_type": "MultilineInput"
              }
            },
            "description": "Parses JSON payload or returns the raw string.",
            "icon": "code",
            "base_classes": [
              "Data"
            ],
            "display_name": "JSON Payload",
            "documentation": "",
            "minimized": false,
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Data"
                ],
                "selected": "Data",
                "name": "parsed_data",
                "hidden": null,
                "display_name": "Data",
                "method": "build_data",
                "value": "__UNDEFINED__",
                "cache": true,
                "required_inputs": null,
                "allows_loop": false,
                "tool_mode": true
              }
            ],
            "field_order": [
              "input_payload"
            ],
            "beta": false,
            "legacy": false,
            "edited": true,
            "metadata": {},
            "tool_mode": false,
            "lf_version": "1.1.4.dev13",
            "official": false
          },
          "showNode": true,
          "type": "JSONPayload",
          "id": "JSONPayload-XCqyQ"
        },
        "id": "JSONPayload-XCqyQ",
        "position": {
          "x": 0,
          "y": 0
        },
        "type": "genericNode"
      }
    ],
    "viewport": {
      "x": 1,
      "y": 1,
      "zoom": 1
    }
  }
}