fragment DiscourseIndexRunFragment on DiscourseIndexRun {
  createdAt
  id
  runDate
  status
}

fragment DiscordServerFragment on DiscordServer {
  createdAt
  discordServerId
  iconUrl
  id
  name
  updatedAt
}

fragment DiscordChannelFragment on DiscordChannel {
  id
  name
  type
  status
  discordChannelId
  shouldIndex
  createdAt
  serverId
  updatedAt
}

fragment DiscordMessageFragment on DiscordMessage {
  id
  content
  discordMessageId
  createdAt
  updatedAt
  serverId
  channelId
  messageDate
  authorUsername
}

fragment WebsiteScrapingInfo on WebsiteScrapingInfo {
  id
  baseUrl
  scrapingStartUrl
  ignoreHashInUrl
  ignoreQueryParams
  createdAt
  updatedAt
}

fragment ArticleIndexingInfo on ArticleIndexingInfo {
  id
  spaceId
  articleUrl
  createdAt
  updatedAt
  status
  text
  textLength
}

fragment SiteScrapingRunFragment on SiteScrapingRun {
  id
  websiteScrapingInfoId
  scrapingRunDate
  status
  createdAt
  updatedAt
}

fragment ScrapedUrlInfoFragment on ScrapedUrlInfo {
  id
  websiteScrapingInfoId
  url
  text
  textLength
  createdAt
  updatedAt
}

fragment DiscoursePost on DiscoursePost {
  id
  spaceId
  title
  url
  fullContent
  author
  datePublished
  createdAt
  indexedAt
  status
  categories
  subCategories
  enacted
  discussed
  aiSummary
  aiSummaryDate
}

query DiscourseIndexRuns($spaceId: String!) {
  discourseIndexRuns(spaceId: $spaceId) {
    ...DiscourseIndexRunFragment
  }
}

query DiscoursePosts($spaceId: String!) {
  discoursePosts(spaceId: $spaceId) {
    ...DiscoursePost
  }
}

query DiscoursePostComments($spaceId: String!, $postId: String!) {
  discoursePostComments(spaceId: $spaceId, postId: $postId) {
    id
    spaceId
    commentPostId
    author
    datePublished
    createdAt
    indexedAt
    content
    postId
  }
}

query DiscourseTopics($spaceId: String!, $postId: String!) {
  discoursePostComments(spaceId: $spaceId, postId: $postId) {
    id
    commentPostId
    spaceId
    content
    author
    datePublished
    createdAt
    indexedAt
    postId
  }
}

query DiscordServer($spaceId: String!, $id: String!) {
  discordServer(spaceId: $spaceId, id: $id) {
    ...DiscordServerFragment
  }
}

query DiscordChannels($spaceId: String!, $serverId: String!) {
  discordChannels(spaceId: $spaceId, serverId: $serverId) {
    ...DiscordChannelFragment
  }
}

query DiscordMessages($spaceId: String!, $channelId: String!) {
  discordMessages(spaceId: $spaceId, channelId: $channelId) {
    ...DiscordMessageFragment
  }
}

query WebsiteScrapingInfos($spaceId: String!) {
  websiteScrapingInfos(spaceId: $spaceId) {
    ...WebsiteScrapingInfo
  }
}

query ArticleIndexingInfos($spaceId: String!) {
  articleIndexingInfos(spaceId: $spaceId) {
    ...ArticleIndexingInfo
  }
}

query SiteScrapingRuns($spaceId: String!, $websiteScrapingInfoId: String!) {
  siteScrapingRuns(spaceId: $spaceId, websiteScrapingInfoId: $websiteScrapingInfoId) {
    ...SiteScrapingRunFragment
  }
}

query ScrapedUrlInfos($spaceId: String!, $websiteScrapingInfoId: String!) {
  scrapedUrlInfos(spaceId: $spaceId, websiteScrapingInfoId: $websiteScrapingInfoId) {
    ...ScrapedUrlInfoFragment
  }
}

mutation TriggerNewDiscourseIndexRun($spaceId: String!) {
  triggerNewDiscourseIndexRun(spaceId: $spaceId) {
    ...DiscourseIndexRunFragment
  }
}

mutation IndexNeedsIndexingDiscoursePosts($spaceId: String!) {
  indexNeedsIndexingDiscoursePosts(spaceId: $spaceId) {
    ...DiscourseIndexRunFragment
  }
}

mutation ReFetchDiscordServers {
  reFetchDiscordServers {
    ...DiscordServerFragment
  }
}

mutation ReFetchDiscordChannels($spaceId: String!, $serverId: String!) {
  reFetchDiscordChannels(spaceId: $spaceId, serverId: $serverId) {
    ...DiscordChannelFragment
  }
}

mutation ReFetchDiscordMessages($spaceId: String!, $channelId: String!) {
  reFetchDiscordMessages(spaceId: $spaceId, channelId: $channelId)
}

mutation UpdateIndexingOfDiscordChannel($spaceId: String!, $channelId: String!, $shouldIndex: Boolean!) {
  updateIndexingOfDiscordChannel(spaceId: $spaceId, channelId: $channelId, shouldIndex: $shouldIndex) {
    ...DiscordChannelFragment
  }
}

mutation IndexDiscoursePost($spaceId: String!, $postId: String!) {
  indexDiscoursePost(spaceId: $spaceId, postId: $postId)
}

mutation CreateWebsiteScrapingInfo($spaceId: String!, $baseUrl: String!, $scrapingStartUrl: String!, $ignoreHashInUrl: Boolean!, $ignoreQueryParams: Boolean!) {
  createWebsiteScrapingInfo(
    spaceId: $spaceId
    baseUrl: $baseUrl
    scrapingStartUrl: $scrapingStartUrl
    ignoreHashInUrl: $ignoreHashInUrl
    ignoreQueryParams: $ignoreQueryParams
  ) {
    ...WebsiteScrapingInfo
  }
}

mutation EditWebsiteScrapingInfo(
  $spaceId: String!
  $websiteScrapingInfoId: String!
  $baseUrl: String!
  $scrapingStartUrl: String!
  $ignoreHashInUrl: Boolean!
  $ignoreQueryParams: Boolean!
) {
  editWebsiteScrapingInfo(
    spaceId: $spaceId
    websiteScrapingInfoId: $websiteScrapingInfoId
    baseUrl: $baseUrl
    scrapingStartUrl: $scrapingStartUrl
    ignoreHashInUrl: $ignoreHashInUrl
    ignoreQueryParams: $ignoreQueryParams
  ) {
    ...WebsiteScrapingInfo
  }
}

mutation TriggerSiteScrapingRun($spaceId: String!, $websiteScrapingInfoId: String!) {
  triggerSiteScrapingRun(spaceId: $spaceId, websiteScrapingInfoId: $websiteScrapingInfoId) {
    ...SiteScrapingRunFragment
  }
}

mutation CreateArticleIndexingInfo($spaceId: String!, $articleUrl: String!) {
  createArticleIndexingInfo(spaceId: $spaceId, articleUrl: $articleUrl) {
    ...ArticleIndexingInfo
  }
}

mutation EditArticleIndexingInfo($spaceId: String!, $articleIndexingInfoId: String!, $articleUrl: String!) {
  editArticleIndexingInfo(spaceId: $spaceId, articleIndexingInfoId: $articleIndexingInfoId, articleUrl: $articleUrl) {
    ...ArticleIndexingInfo
  }
}

mutation AnnotateDiscoursePost($spaceId: String!, $input: AnnotateDiscoursePostInput!) {
  annotateDiscoursePost(spaceId: $spaceId, input: $input) {
    ...DiscoursePost
  }
}

mutation UpsertSummaryOfDiscoursePost($spaceId: String!, $input: UpsertSummaryOfDiscoursePostInput!) {
  upsertSummaryOfDiscoursePost(spaceId: $spaceId, input: $input) {
    ...DiscoursePost
  }
}
