// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator json {
  provider  = "prisma-json-types-generator"
  namespace = "PrismaJson"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// --------------------------
// Existing Models
// --------------------------

model Ticker {
  id                           String   @id @default(uuid())
  tickerKey                    String   @unique @map("ticker_key")
  createdAt                    DateTime @default(now()) @map("created_at")
  updatedAt                    DateTime @updatedAt @map("updated_at")
  createdBy                    String?  @map("created_by")
  updatedBy                    String?  @map("updated_by")
  sectorId                     Int      @map("sector_id")
  industryGroupId              Int      @map("industry_group_id")
  spaceId                      String   @default("koala_gains") @map("space_id")
  // latest10QInformationId       String?  @map("latest_10q_information_id")
  latest10QFinancialStatements String?  @map("latest_10q_financial_statements")
  companyName                  String   @default("Unknown Company") @map("company_name")
  shortDescription             String   @default("No description provided") @map("short_description")
  tickerInfo                   String?  @map("ticker_info")
  managementTeam               Json?    @map("management_team")

  evaluationsOfLatest10Q         CriterionEvaluation[]
  secFilings                     SecFiling[]
  ImportantMetrics               ImportantMetricsEvaluation[]
  MetricValueItem                MetricValueItem[]
  CriterionReportItem            CriterionReportItem[]
  PerformanceChecklistEvaluation PerformanceChecklistEvaluation[]
  PerformanceChecklistItem       PerformanceChecklistItem[]
  CriterionMatch                 CriterionMatch[]
  criteriaMatchesOfLatest10Q     CriteriaMatchesOfLatest10Q?
  latest10QInfo                  Latest10QInfo?
  // latest10QInformation           Latest10QInformation?            @relation(fields: [latest10QInformationId], references: [id])
  @@unique([spaceId, tickerKey])
  @@map("tickers")
}

model SecFiling {
  id              String   @id @default(uuid())
  tickerKey       String   @map("ticker_key")
  filingDate      DateTime @map("filing_date")
  form            String   @map("form")
  filingUrl       String   @map("filing_url")
  accessionNumber String   @unique @map("accession_number")
  periodOfReport  String   @map("period_of_report")
  shortSummary    String?  @map("short_summary")
  spaceId         String   @default("koala_gains") @map("space_id")

  attachments SecFilingAttachment[]
  ticker      Ticker                @relation(fields: [tickerKey], references: [tickerKey])

  @@map("sec_filings")
}

// Model for Filing attachments using UUIDs.
model SecFilingAttachment {
  id             String    @id @default(uuid())
  sequenceNumber String    @map("sequence_number")
  description    String    @map("description")
  purpose        String?   @map("purpose")
  url            String    @map("url")
  documentType   String    @map("document_type")
  secFilingId    String    @map("sec_filing_id")
  secFiling      SecFiling @relation(fields: [secFilingId], references: [id])
  spaceId        String    @default("koala_gains") @map("space_id")

  @@map("sec_filing_attachments")
}

enum FormSize {
  xs
  s
  m
  l
  xl
}

model SecForm {
  formName         String   @id @map("form_name")
  formDescription  String   @map("form_description")
  importantItems   Json     @map("important_items")
  averagePageCount Int      @map("average_page_count")
  size             FormSize @map("size")
}

// --------------------------
// New Ticker Report Models (All IDs as UUID)
// --------------------------

enum ProcessingStatus {
  Completed
  Failed
  InProgress
  NotStarted
}

model CriterionEvaluation {
  id           String @id @default(uuid())
  tickerKey    String @map("ticker_key")
  criterionKey String @map("criterion_key")
  spaceId      String @default("koala_gains") @map("space_id")

  importantMetricsEvaluation     ImportantMetricsEvaluation?
  performanceChecklistEvaluation PerformanceChecklistEvaluation?
  reports                        CriterionReportItem[]
  ticker                         Ticker                          @relation(fields: [tickerKey], references: [tickerKey])

  @@unique([spaceId, tickerKey, criterionKey])
  @@map("criterion_evaluations")
}

model ImportantMetricsEvaluation {
  id                    String           @id @default(uuid())
  status                ProcessingStatus
  createdAt             DateTime         @default(now()) @map("created_at")
  updatedAt             DateTime         @updatedAt @map("updated_at")
  createdBy             String?          @map("created_by")
  updatedBy             String?          @map("updated_by")
  tickerKey             String           @map("ticker_key")
  criterionKey          String           @map("criterion_key")
  spaceId               String           @default("koala_gains") @map("space_id")
  criterionEvaluationId String?          @unique @map("criterion_evaluation_id")

  criterionEvaluation CriterionEvaluation? @relation(fields: [criterionEvaluationId], references: [id])
  ticker              Ticker               @relation(fields: [tickerKey], references: [tickerKey])
  metrics             MetricValueItem[]

  @@unique([spaceId, tickerKey, criterionKey])
  @@map("important_metrics")
}

model MetricValueItem {
  id                     String @id @default(uuid())
  metricKey              String @map("metric_key")
  value                  String @map("value")
  calculationExplanation String @map("calculation_explanation")
  allInformationUsed     String @default("Not provided") @map("all_information_used")
  tickerKey              String @map("ticker_key")
  criterionKey           String @map("criterion_key")
  importantMetricsId     String @map("important_metrics_id")
  spaceId                String @default("koala_gains") @map("space_id")

  importantMetrics ImportantMetricsEvaluation @relation(fields: [importantMetricsId], references: [id])
  ticker           Ticker                     @relation(fields: [tickerKey], references: [tickerKey])

  @@map("metric_value_items")
}

model CriterionReportItem {
  id                    String           @id @default(uuid())
  reportKey             String           @map("report_key")
  status                ProcessingStatus @map("status")
  textData              String?          @map("data")
  jsonData              Json?            @map("json_data")
  createdAt             DateTime         @default(now()) @map("created_at")
  updatedAt             DateTime         @updatedAt @map("updated_at")
  createdBy             String?          @map("created_by")
  updatedBy             String?          @map("updated_by")
  tickerKey             String           @map("ticker_key")
  criterionKey          String           @map("criterion_key")
  criterionEvaluationId String           @map("criterion_evaluation_id")
  spaceId               String           @default("koala_gains") @map("space_id")

  criterionEvaluation CriterionEvaluation @relation(fields: [criterionEvaluationId], references: [id])
  ticker              Ticker              @relation(fields: [tickerKey], references: [tickerKey])

  @@unique([spaceId, tickerKey, criterionKey, reportKey])
  @@map("criterion_report_items")
}

model PerformanceChecklistEvaluation {
  id                    String           @id @default(uuid())
  status                ProcessingStatus @map("status")
  createdAt             DateTime         @default(now()) @map("created_at")
  updatedAt             DateTime         @updatedAt @map("updated_at")
  createdBy             String?          @map("created_by")
  updatedBy             String?          @map("updated_by")
  tickerKey             String           @map("ticker_key")
  criterionKey          String           @map("criterion_key")
  criterionEvaluationId String?          @unique @map("criterion_evaluation_id")
  spaceId               String           @default("koala_gains") @map("space_id")

  criterionEvaluation       CriterionEvaluation?       @relation(fields: [criterionEvaluationId], references: [id])
  ticker                    Ticker                     @relation(fields: [tickerKey], references: [tickerKey])
  performanceChecklistItems PerformanceChecklistItem[]

  @@unique([spaceId, tickerKey, criterionKey])
  @@map("performance_checklist_evaluations")
}

model PerformanceChecklistItem {
  id                               String  @id @default(uuid())
  metricKey                        String? @map("metric_key")
  checklistItem                    String  @map("checklist_item")
  oneLinerExplanation              String  @map("one_liner_explanation")
  informationUsed                  String  @map("information_used")
  detailedExplanation              String  @map("detailed_explanation")
  evaluationLogic                  String  @map("evaluation_logic")
  score                            Float   @map("score")
  tickerKey                        String  @map("ticker_key")
  criterionKey                     String  @map("criterion_key")
  performanceChecklistEvaluationId String  @map("performance_checklist_evaluation_id")
  spaceId                          String  @default("koala_gains") @map("space_id")

  performanceChecklistEvaluation PerformanceChecklistEvaluation @relation(fields: [performanceChecklistEvaluationId], references: [id])
  ticker                         Ticker                         @relation(fields: [tickerKey], references: [tickerKey])

  @@map("performance_checklist_items")
}

model CriteriaMatchesOfLatest10Q {
  id                                String           @id @default(uuid())
  status                            ProcessingStatus @map("status")
  createdAt                         DateTime         @default(now()) @map("created_at")
  updatedAt                         DateTime         @updatedAt @map("updated_at")
  createdBy                         String?          @map("created_by")
  updatedBy                         String?          @map("updated_by")
  failureReason                     String?          @map("failure_reason")
  tickerKey                         String           @map("ticker_key")
  tickerId                          String           @unique @map("ticker_id")
  spaceId                           String           @default("koala_gains") @map("space_id")
  matchingAttachmentsCount          Int?             @map("matching_attachments_count")
  matchingAttachmentsProcessedCount Int?             @map("matching_attachments_processed_count")

  criterionMatches CriterionMatch[]
  ticker           Ticker           @relation(fields: [tickerId], references: [id])

  @@unique([spaceId, tickerKey])
  @@map("criteria_matches_latest_10q")
}

model CriterionMatch {
  id                            String @id @default(uuid())
  criterionKey                  String @map("criterion_key")
  matchedContent                String @map("matched_content")
  tickerKey                     String @map("ticker_key")
  spaceId                       String @default("koala_gains") @map("space_id")
  criterionMatchesOfLatest10QId String @map("criterion_matches_latest_10q_id")

  criterionMatchesOfLatest10Q CriteriaMatchesOfLatest10Q @relation(fields: [criterionMatchesOfLatest10QId], references: [id], onDelete: Cascade)
  ticker                      Ticker                     @relation(fields: [tickerKey], references: [tickerKey])

  @@unique([spaceId, tickerKey, criterionKey])
  @@map("criterion_matches")
}

model Prompt {
  id                  String          @id @default(uuid())
  spaceId             String          @map("space_id")
  name                String          @map("name")
  key                 String          @map("key")
  excerpt             String?         @map("excerpt")
  inputSchema         String?         @map("input_schema")
  outputSchema        String          @map("output_schema")
  sampleJson          String?         @map("sample_json")
  sampleBodyToAppend  String?         @map("sample_body_to_append")
  transformationPatch Json?           @map("transformation_patch") @db.JsonB
  createdAt           DateTime        @default(now()) @map("created_at")
  updatedAt           DateTime        @updatedAt @map("updated_at")
  createdBy           String          @map("created_by")
  updatedBy           String          @map("updated_by")
  notes               String?         @map("notes")
  promptVersions      PromptVersion[]

  activePromptVersionId String?            @unique @map("active_prompt_version_id")
  activePromptVersion   PromptVersion?     @relation("ActivePromptVersion", fields: [activePromptVersionId], references: [id])
  PromptInvocation      PromptInvocation[]

  @@unique([spaceId, key])
  @@map("prompts")
}

model PromptVersion {
  id             String   @id @default(uuid())
  spaceId        String   @map("space_id")
  promptId       String   @map("prompt_id")
  version        Int      @map("version")
  promptTemplate String   @map("prompt_template")
  commitMessage  String?  @map("commit_message")
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")
  createdBy      String   @map("created_by")
  updatedBy      String   @map("updated_by")

  prompt Prompt @relation(fields: [promptId], references: [id])

  activeInPrompt Prompt? @relation("ActivePromptVersion")

  promptInvocations PromptInvocation[]

  @@unique([promptId, version])
  @@map("prompt_versions")
}

enum PromptInvocationStatus {
  Completed
  Failed
  InProgress
  NotStarted
}

model PromptInvocation {
  id                 String                 @id @default(uuid())
  spaceId            String                 @map("space_id")
  promptId           String                 @map("prompt_id")
  promptVersionId    String                 @map("prompt_version_id")
  inputJson          Json?                  @map("input_json") @db.JsonB
  outputJson         Json?                  @map("output_json") @db.JsonB
  transformedJson    Json?                  @map("transformed_json") @db.JsonB
  status             PromptInvocationStatus @map("status")
  error              String?                @map("error")
  createdAt          DateTime               @default(now()) @map("created_at")
  updatedAt          DateTime               @updatedAt @map("updated_at")
  createdBy          String                 @map("created_by")
  updatedBy          String                 @map("updated_by")
  bodyToAppend       String?                @map("body_to_append")
  llmProvider        String                 @map("llm_provider")
  model              String                 @map("model")
  promptRequestToLlm String?                @map("prompt_request_to_llm")
  prompt             Prompt                 @relation(fields: [promptId], references: [id])
  promptVersion      PromptVersion          @relation(fields: [promptVersionId], references: [id])

  @@map("prompt_invocations")
}

model TestPromptInvocation {
  id              String                 @id @default(uuid())
  spaceId         String                 @map("space_id")
  promptId        String                 @map("prompt_id")
  promptTemplate  String                 @map("prompt_template")
  inputJson       Json?                  @map("input_json") @db.JsonB
  bodyToAppend    String?                @map("body_to_append")
  outputJson      Json?                  @map("output_json") @db.JsonB
  transformedJson Json?                  @map("transformed_json") @db.JsonB
  status          PromptInvocationStatus @map("status")
  error           String?                @map("error")
  createdAt       DateTime               @default(now()) @map("created_at")
  updatedAt       DateTime               @updatedAt @map("updated_at")
  createdBy       String                 @map("created_by")
  updatedBy       String                 @map("updated_by")
  llmProvider     String                 @map("llm_provider")
  model           String                 @map("model")

  @@map("test_prompt_invocations")
}

model Latest10QInfo {
  id               String @id @default(uuid())
  spaceId          String @default("koala_gains") @map("space_id")
  tickerKey        String @unique @map("ticker_key")
  filingUrl        String @map("filing_url")
  periodOfReport   String @map("period_of_report")
  filingDate       String @map("filing_date")
  priceAtPeriodEnd Float  @map("price_at_period_end")

  ticker Ticker @relation(fields: [tickerKey], references: [tickerKey])

  @@unique([spaceId, tickerKey])
  @@map("latest_10q_infos")
}

// model Latest10QInformation {
//   id          String               @id @default(uuid())
//   spaceId     String               @default("koala_gains") @map("space_id")
//   tickerKey   String               @map("ticker_key")
//   periodOfReport String               @map("period_of_report")
//   filingUrl      String               @map("filing_url")
//   attachments Latest10Attachment[]
//   Ticker      Ticker[]
//
//   @@map("latest_10q_informations")
// }
//
// model Latest10Attachment {
//   id                     String  @id @default(uuid())
//   spaceId                String  @default("koala_gains") @map("space_id")
//   tickerKey              String  @map("ticker_key")
//   sequenceNumber         String  @map("sequence_number")
//   documentName           String? @map("document_name")
//   purpose                String? @map("purpose")
//   url                    String  @map("url")
//   latest10QInformationId String? @map("latest_10q_information_id")
//   /// [CriterionAttachmentMatch]
//   criterionMatches       Json[]  @map("criterion_matches") @db.JsonB
//
//   Latest10QInformation Latest10QInformation? @relation(fields: [latest10QInformationId], references: [id])
//
//   @@unique([spaceId, tickerKey, sequenceNumber])
//   @@map("latest_10_attachments")
// }

// --------------------------
// Enums (normalized to match existing style)
// --------------------------

enum EvaluationResult {
  Pass
  Fail
}

enum TickerAnalysisCategory {
  BusinessAndMoat
  FinancialStatementAnalysis
  PastPerformance
  FutureGrowth
  VsCompetition
  FairValue
}

// --------------------------
// New Tables (convention-aligned)
// --------------------------

model TickerV1 {
  id             String   @id @default(uuid())
  name           String   @map("name")
  symbol         String   @map("symbol")
  exchange       String   @map("exchange")
  industryKey    String   @map("industry_key")
  subIndustryKey String   @map("sub_industry_key")
  websiteUrl     String?  @map("website_url")
  summary        String?  @map("summary")
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")
  createdBy      String?  @map("created_by")
  updatedBy      String?  @map("updated_by")
  cachedScore    Int      @default(0) @map("cached_score")
  spaceId        String   @default("koala_gains") @map("space_id")

  // Relations
  categoryAnalysisResults TickerV1CategoryAnalysisResult[]
  factorResults           TickerV1AnalysisCategoryFactorResult[]
  investorAnalysisResults TickerV1InvestorAnalysisResult[]
  futureRisks             TickerV1FutureRisk[]
  vsCompetition           TickerV1VsCompetition?

  // Ensure uniqueness of symbol+exchange per space
  @@unique([spaceId, symbol, exchange])
  @@map("tickers_v1")
}

model AnalysisCategoryFactor {
  id                        String                 @id @default(uuid())
  industryKey               String                 @map("industry_key")
  subIndustryKey            String                 @map("sub_industry_key")
  categoryKey               TickerAnalysisCategory @map("category_key")
  factorAnalysisKey         String                 @map("factor_analysis_key")
  factorAnalysisTitle       String                 @map("factor_analysis_title")
  factorAnalysisDescription String                 @map("factor_analysis_description")
  factorAnalysisMetrics     String?                @map("factor_analysis_metrics")
  createdAt                 DateTime               @default(now()) @map("created_at")
  updatedAt                 DateTime               @updatedAt @map("updated_at")
  createdBy                 String?                @map("created_by")
  updatedBy                 String?                @map("updated_by")
  spaceId                   String                 @default("koala_gains") @map("space_id")

  // Backrefs
  factorResults TickerV1AnalysisCategoryFactorResult[]

  @@unique([spaceId, industryKey, subIndustryKey, categoryKey, factorAnalysisKey])
  @@map("analysis_category_factors")
}

model TickerV1CategoryAnalysisResult {
  id                     String                 @id @default(uuid())
  categoryKey            TickerAnalysisCategory @map("category_key")
  summary                String                 @map("summary")
  introductionToAnalysis String                 @map("introduction_to_analysis")
  tickerId               String                 @map("ticker_id")
  spaceId                String                 @default("koala_gains") @map("space_id")
  createdAt              DateTime               @default(now()) @map("created_at")
  updatedAt              DateTime               @updatedAt @map("updated_at")
  createdBy              String?                @map("created_by")
  updatedBy              String?                @map("updated_by")

  ticker TickerV1 @relation(fields: [tickerId], references: [id])

  // 👇 back-reference so you can `include` factor results
  factorResults TickerV1AnalysisCategoryFactorResult[]

  @@unique([spaceId, tickerId, categoryKey])
  @@index([tickerId])
  @@map("ticker_v1_category_analysis_results")
}

model TickerV1AnalysisCategoryFactorResult {
  id                       String                 @id @default(uuid())
  categoryKey              TickerAnalysisCategory @map("category_key")
  analysisCategoryFactorId String                 @map("analysis_category_factor_id")
  oneLineExplanation       String                 @map("one_line_explanation")
  detailedExplanation      String                 @map("detailed_explanation")
  result                   EvaluationResult       @map("result")
  tickerId                 String                 @map("ticker_id")
  spaceId                  String                 @default("koala_gains") @map("space_id")
  createdAt                DateTime               @default(now()) @map("created_at")
  updatedAt                DateTime               @updatedAt @map("updated_at")
  createdBy                String?                @map("created_by")
  updatedBy                String?                @map("updated_by")

  ticker                 TickerV1               @relation(fields: [tickerId], references: [id])
  analysisCategoryFactor AnalysisCategoryFactor @relation(fields: [analysisCategoryFactorId], references: [id])

  // 👇 new relation tying child to parent via the parent's composite unique
  categoryAnalysisResult TickerV1CategoryAnalysisResult @relation(fields: [spaceId, tickerId, categoryKey], references: [spaceId, tickerId, categoryKey], onDelete: Cascade)

  @@unique([spaceId, tickerId, analysisCategoryFactorId])
  @@index([tickerId])
  @@index([analysisCategoryFactorId])
  @@map("ticker_v1_analysis_category_factor_results")
}

model TickerV1InvestorAnalysisResult {
  id               String   @id @default(uuid())
  investorKey      String   @map("investor_key") // e.g. "WARREN_BUFFETT"
  summary          String   @map("summary")
  detailedAnalysis String   @map("detailed_analysis")
  tickerId         String   @map("ticker_id")
  spaceId          String   @default("koala_gains") @map("space_id")
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @updatedAt @map("updated_at")
  createdBy        String?  @map("created_by")
  updatedBy        String?  @map("updated_by")

  ticker TickerV1 @relation(fields: [tickerId], references: [id])

  @@unique([spaceId, tickerId, investorKey])
  @@index([tickerId])
  @@map("ticker_v1_investor_analysis_results")
}

model TickerV1FutureRisk {
  id               String   @id @default(uuid())
  summary          String   @map("summary")
  detailedAnalysis String   @map("detailed_analysis")
  tickerId         String   @map("ticker_id")
  spaceId          String   @default("koala_gains") @map("space_id")
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @updatedAt @map("updated_at")
  createdBy        String?  @map("created_by")
  updatedBy        String?  @map("updated_by")

  ticker TickerV1 @relation(fields: [tickerId], references: [id])

  @@unique([spaceId, tickerId])
  @@index([tickerId])
  @@map("ticker_v1_future_risks")
}

model TickerV1VsCompetition {
  id                       String   @id @default(uuid())
  summary                  String   @map("summary")
  introductionToAnalysis   String   @map("introduction_to_analysis")
  // Store as a JSON value (can itself be a JSON array of objects)
  /// [CompetetionAnalysisArray]
  competitionAnalysisArray Json[]   @map("competition_analysis")
  tickerId                 String   @unique @map("ticker_id")
  spaceId                  String   @default("koala_gains") @map("space_id")
  createdAt                DateTime @default(now()) @map("created_at")
  updatedAt                DateTime @updatedAt @map("updated_at")
  createdBy                String?  @map("created_by")
  updatedBy                String?  @map("updated_by")

  ticker TickerV1 @relation(fields: [tickerId], references: [id])

  @@unique([spaceId, tickerId])
  @@index([tickerId])
  @@map("ticker_v1_vs_competition")
}
