// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator json {
  provider  = "prisma-json-types-generator"
  namespace = "PrismaJson"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// NextAuth default user tables
// Most of these tables and fields are not needed for this example
//  but this is what NextAuth adapters expect to be in the database
//  so we are keeping it for future compatibility and extensibility
// See comments on what is added by us.

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @map("refresh_token")
  access_token      String? @map("access_token")
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id               String            @id @default(cuid())
  name             String?
  email            String?
  emailVerified    DateTime?         @map("email_verified")
  image            String?
  publicAddress    String?           @map("public_address")
  spaceId          String            @map("space_id")
  username         String            @map("username")
  authProvider     String            @map("auth_provider")
  phone_number     String?           @map("phone_number")
  accounts         Account[]
  cryptoLoginNonce CryptoLoginNonce?
  sessions         Session[]

  @@unique([publicAddress, spaceId])
  @@unique([username, spaceId])
  @@unique([email, spaceId])
  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

// Added for crypto authentication

model CryptoLoginNonce {
  userId  String   @unique @map("user_id")
  nonce   String
  expires DateTime
  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("crypto_login_nonce")
}

model Space {
  id               String            @id @db.VarChar(64)
  verified         Boolean           @default(false)
  createdAt        DateTime          @default(now()) @map("created_at")
  creator          String            @db.VarChar(64)
  name             String            @db.VarChar(255)
  updatedAt        DateTime          @updatedAt @map("updated_at")
  avatar           String?           @db.VarChar(255)
  admins           String[]
  adminUsernames   String[]          @default(dbgenerated("(ARRAY[]::character varying[])::character varying(255)[]")) @map("admin_usernames") @db.VarChar(255)
  /// [UsernameAndName]
  adminUsernamesV1 Json[]            @map("admin_usernames_v1") @db.JsonB
  domains          String[]          @default([])
  skin             String            @default("dodao") @db.VarChar(128)
  discordInvite    String?           @map("discord_invite") @db.VarChar(1024)
  telegramInvite   String?           @map("telegram_invite") @db.VarChar(1024)
  /// [SpaceInviteLinks]
  inviteLinks      Json?             @map("invite_links") @db.Json
  /// [AuthSettings]
  authSettings     Json              @default("{}") @map("auth_settings") @db.Json
  /// [GuideSettings]
  guideSettings    Json              @default("{}") @map("guide_settings") @db.Json
  /// [SocialSettings]
  socialSettings   Json              @default("{}") @map("social_settings") @db.Json
  /// [ByteSettings]
  byteSettings     Json              @default("{}") @map("byte_settings") @db.Json
  features         String[]
  botDomains       String[]          @default([])
  SpaceDiscord     SpaceDiscord[]
  SpaceIntegration SpaceIntegration?
  /// [ThemeColors]
  themeColors      Json?             @map("theme_colors") @db.Json
  type             String            @default("ACADEMY_SITE") @db.VarChar(255)
  /// [TidbitsHomepage]
  tidbitsHomepage  Json?             @map("tidbits_homepage") @db.Json
  Byte             Byte[]
  GuideStep        GuideStep[]
  GuideSubmission  GuideSubmission[]
  Course           Course[]

  @@map("spaces")
}

model SpaceIntegration {
  id                         String   @id @db.VarChar(255)
  spaceId                    String   @unique @map("space_id") @db.VarChar(66)
  createdAt                  DateTime @default(now()) @map("created_at")
  createdBy                  String?  @map("created_by") @db.VarChar(256)
  discordGuildId             String?  @map("discord_guild_id") @db.VarChar(255)
  projectGalaxyToken         String?  @map("project_galaxy_token") @db.VarChar(256)
  projectGalaxyTokenLastFour String?  @map("project_galaxy_token_last_four") @db.VarChar(64)
  updatedAt                  DateTime @updatedAt @map("updated_at")
  updatedBy                  String?  @map("updated_by") @db.VarChar(256)
  gnosisSafeWallets          Json?    @map("gnosis_safe_wallets") @db.Json
  /// [GitGuideRepository]
  gitGuideRepositories       Json[]   @map("git_guide_repositories") @db.Json
  academyRepository          String?  @map("academy_repository") @db.VarChar(2048)
  /// [SpaceLoadersInfo]
  loadersInfo                Json?    @db.Json
  space                      Space    @relation(fields: [spaceId], references: [id])

  @@map("space_integrations")
}

model SpaceDiscord {
  id                String   @id @db.VarChar(255)
  accessToken       String   @map("access_token") @db.VarChar(255)
  accessTokenExpiry Int      @map("access_token_expiry")
  createdAt         DateTime @default(now()) @map("created_at")
  refreshToken      String   @map("refresh_token") @db.VarChar(255)
  selectedGuideId   String?  @map("selected_guide_id") @db.VarChar(255)
  spaceId           String   @map("space_id") @db.VarChar(66)
  updatedAt         DateTime @updatedAt @map("updated_at")
  space             Space    @relation(fields: [spaceId], references: [id])

  @@map("space_discords")
}

model Byte {
  id               String                       @id @unique @db.VarChar(255)
  name             String                       @db.VarChar(255)
  content          String
  created          String                       @db.VarChar(255)
  admins           String[]
  tags             String[]
  priority         Int                          @default(50) @map("priority")
  /// [ByteStep]
  steps            Json[]
  spaceId          String                       @map("space_id") @db.VarChar(255)
  Space            Space                        @relation(fields: [spaceId], references: [id])
  videoUrl         String?                      @map("video_url") @db.VarChar(1024)
  videoAspectRatio String?                      @map("video_aspect_ratio") @db.VarChar(255)
  byteStyle        String?                      @default("CardAndCircleProgress") @map("byte_style") @db.VarChar(255)
  /// [CompletionScreen]
  completionScreen Json?                        @map("completion_screen") @db.Json
  byteCollectionItemMappings ByteCollectionItemMappings[]
  @@map("bytes")
}

model ByteRating {
  ratingUuid       String   @id @map("rating_uuid") @db.VarChar(255)
  byteId           String   @map("byte_id") @db.VarChar(255)
  spaceId          String   @map("space_id") @db.VarChar(255)
  userId           String?  @map("user_id") @db.VarChar(255)
  ipAddress        String?  @map("ip_address") @db.VarChar(64)
  skipRating       Boolean? @map("skip_rating")
  rating           Int?     @map("rating")
  /// [ByteFeedback]
  positiveFeedback Json?    @map("positive_feedback") @db.Json
  /// [ByteFeedback]
  negativeFeedback Json?    @map("negative_feedback") @db.Json
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @updatedAt @map("updated_at")
  username         String?  @map("username") @db.VarChar(1024)
  suggestion       String?  @map("suggestion") @db.VarChar(1024)

  @@map("byte_ratings")
}

model ByteSocialShare {
  uuid               String   @id @default(uuid()) @db.VarChar(255)
  byteId             String   @unique @map("byte_id") @db.VarChar(255)
  spaceId            String   @map("space_id") @db.VarChar(255)
  /// [ByteLinkedPdfContent]
  linkedinPdfContent Json?    @map("linkedin_pdf_content") @db.Json
  linkedInImages     String[] @default([]) @map("linked_in_images")
  linkedInPdf        String?  @map("linked_in_pdf") @db.VarChar(1024)
  twitterImage       String?  @map("twitter_image") @db.VarChar(1024)
  createdAt          DateTime @default(now()) @map("created_at")
  createdBy          String?  @map("created_by") @db.VarChar(256)
  updatedAt          DateTime @updatedAt @map("updated_at")
  updatedBy          String?  @map("updated_by") @db.VarChar(256)

  @@unique([byteId, spaceId])
  @@map("byte_social_shares")
}

model ByteSubmission {
  id        String   @id @db.VarChar(66)
  created   DateTime @default(now()) @map("created_at")
  createdBy String   @map("created_by") @db.VarChar(64)
  byteId    String   @map("byte_id") @db.VarChar(64)
  spaceId   String   @map("space_id") @db.VarChar(64)
  ipAddress String?  @map("ip_address") @db.VarChar(64)

  @@map("byte_submissions")
}

model ByteCollection {
  id          String                       @id @db.VarChar(255)
  spaceId     String                       @map("space_id") @db.VarChar(66)
  createdAt   DateTime                     @default(now()) @map("created_at")
  updatedAt   DateTime                     @updatedAt @map("updated_at")
  name        String                       @db.VarChar(255)
  description String
  byteIds     String[]                     @map("byte_ids") @db.VarChar(255)
  status      String                       @db.VarChar(255)
  priority    Int                          @default(50) @map("priority")
  videoUrl    String?                      @map("video_url") @db.VarChar(1024)
  items       ByteCollectionItemMappings[]

  @@map("byte_collections")
}

model Guide {
  id                        String      @id @db.VarChar(66)
  content                   String
  previousId                String?     @map("previous_id") @db.VarChar(66)
  uuid                      String      @db.VarChar(255)
  authors                   Json
  createdAt                 DateTime    @default(now()) @map("created_at")
  spaceId                   String      @map("space_id") @db.VarChar(64)
  guideName                 String      @map("guide_name") @db.VarChar(255)
  guideSource               String      @map("guide_source") @db.VarChar(255)
  status                    String      @db.VarChar(255)
  version                   Int
  thumbnail                 String?     @db.VarChar(255)
  categories                String[]    @default([])
  discordWebhook            String?     @map("discord_webhook") @db.VarChar(1024)
  guideType                 String      @default("onboarding") @map("guide_type") @db.VarChar(128)
  publishStatus             String      @default("Live") @map("publish_status") @db.VarChar(128)
  socialShareImage          String?     @map("social_share_image") @db.VarChar(2048)
  discordRoleIds            Json        @map("discord_role_ids")
  discordRolePassingCount   Int?        @map("discord_role_passing_count")
  showIncorrectOnCompletion Boolean     @default(true) @map("show_incorrect_on_completion")
  postSubmissionStepContent String      @map("post_submission_step_content")
  archive                   Boolean     @default(false)
  GuideStep                 GuideStep[]

  @@map("guides")
}

model GuideStep {
  id        String   @id @db.VarChar(66)
  uuid      String   @db.VarChar(66)
  createdAt DateTime @default(now()) @map("created_at")
  stepName  String   @map("step_name") @db.VarChar(255)
  content   String
  stepItems Json     @map("step_items") @db.Json
  stepOrder Int      @map("step_order")
  spaceId   String   @map("space_id") @db.VarChar(64)
  space     Space    @relation(fields: [spaceId], references: [id])
  guideId   String   @map("guide_id") @db.VarChar(66)
  guide     Guide    @relation(fields: [guideId], references: [id])

  @@map("guide_steps")
}

model GuideSubmission {
  id                    String   @id @db.VarChar(66)
  createdAt             DateTime @default(now()) @map("created_at")
  createdBy             String   @map("created_by") @db.VarChar(64)
  createdByUsername     String   @map("created_by_username") @db.VarChar(128)
  guideId               String   @map("guide_id") @db.VarChar(64)
  guideUuid             String   @map("guide_uuid") @db.VarChar(255)
  /// [GuideSubmissionResult]
  result                Json     @db.Json
  spaceId               String   @map("space_id") @db.VarChar(64)
  /// [GuideStepSubmissionArray]
  steps                 Json     @db.Json
  uuid                  String   @db.VarChar(255)
  ipAddress             String?  @map("ip_address") @db.VarChar(64)
  correctQuestionsCount Int      @map("correct_questions_count")
  space                 Space    @relation(fields: [spaceId], references: [id])

  @@map("guide_submissions")
}

model GuideRating {
  ratingUuid       String   @id @map("rating_uuid") @db.VarChar(255)
  guideUuid        String   @map("guide_uuid") @db.VarChar(255)
  spaceId          String   @map("space_id") @db.VarChar(255)
  userId           String?  @map("user_id") @db.VarChar(255)
  ipAddress        String?  @map("ip_address") @db.VarChar(64)
  skipStartRating  Boolean? @map("skip_start_rating")
  skipEndRating    Boolean? @map("skip_end_rating")
  startRating      Int?     @map("start_rating")
  endRating        Int?     @map("end_rating")
  /// [GuideFeedback]
  positiveFeedback Json?    @map("positive_feedback") @db.Json
  /// [GuideFeedback]
  negativeFeedback Json?    @map("negative_feedback") @db.Json
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @updatedAt @map("updated_at")
  username         String?  @map("username") @db.VarChar(1024)
  suggestion       String?  @map("suggestion") @db.VarChar(1024)

  @@map("guide_ratings")
}

model ClickableDemos {
  id        String   @id @db.VarChar(255)
  spaceId   String   @map("space_id") @db.VarChar(66)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  title     String
  excerpt   String   @db.VarChar(256)
  /// [ClickableDemoStep]
  steps     Json[]
  archive   Boolean? @default(false)
  byteCollectionItemMappings ByteCollectionItemMappings[]
  @@map("clickable_demos")
}

model ByteCollectionItemMappings {
  id               String          @id @db.VarChar(64)
  byteCollectionId String          @map("byte_collection_id")
  itemId           String          @db.VarChar(64)
  itemType         String          @db.VarChar(255)
  order            Int
  ByteCollection   ByteCollection? @relation(fields: [byteCollectionId], references: [id], map: "FK_ByteCollection")
  ClickableDemos ClickableDemos[]
  Byte Byte[]

  @@map("byte_collections_items_mappings")
}
  // Byte             Byte?           @relation(fields: [itemId], references: [id], map: "FK_Byte")
  // ClickableDemos   ClickableDemos?   @relation(fields: [itemId], references: [id], map: "FK_ClickableDemos")
  // ShortVideo       ShortVideo?       @relation(fields: [itemId], references: [id], map: "FK_ShortVideo")



model CourseSubmission {
  uuid                     String                  @id @db.VarChar(66)
  courseKey                String                  @map("course_key") @db.VarChar(128)
  createdAt                DateTime                @default(now()) @map("created_at")
  createdBy                String                  @map("created_by") @db.VarChar(64)
  isLatestSubmission       Boolean                 @map("is_latest_submission")
  questionsAttempted       Int?                    @map("questions_attempted")
  questionsCorrect         Int?                    @map("questions_correct")
  questionsIncorrect       Int?                    @map("questions_incorrect")
  questionsSkipped         Int?                    @map("questions_skipped")
  spaceId                  String                  @map("space_id") @db.VarChar(64)
  updatedAt                DateTime                @updatedAt @map("updated_at")
  status                   String                  @default("InProgress") @db.VarChar(64)
  galaxyCredentialsUpdated Boolean?                @map("galaxy_credentials_updated")
  GitCourseTopicSubmission CourseTopicSubmission[]

  @@map("course_submissions")
}

model CourseTopicSubmission {
  uuid                 String           @id @db.VarChar(66)
  courseKey            String           @map("course_key") @db.VarChar(128)
  courseSubmissionUuid String           @map("course_submission_uuid") @db.VarChar(66)
  createdAt            DateTime         @default(now()) @map("created_at")
  createdBy            String           @map("created_by") @db.VarChar(64)
  isLatestSubmission   Boolean          @map("is_latest_submission")
  questionsAttempted   Int?             @map("questions_attempted")
  questionsCorrect     Int?             @map("questions_correct")
  questionsIncorrect   Int?             @map("questions_incorrect")
  questionsSkipped     Int?             @map("questions_skipped")
  /// [TempTopicSubmissionModel]
  submission           Json             @db.Json
  spaceId              String           @map("space_id") @db.VarChar(64)
  topicKey             String           @map("topic_key") @db.VarChar(128)
  updatedAt            DateTime         @updatedAt @map("updated_at")
  status               String           @default("InProgress") @db.VarChar(64)
  correctAnswers       Json?            @map("correct_answers")
  courseSubmission     CourseSubmission @relation(fields: [courseSubmissionUuid], references: [uuid])

  @@map("course_topic_submissions")
}

model Timeline {
  id            String   @id @db.VarChar(255)
  name          String   @db.VarChar(255)
  excerpt       String   @db.VarChar(256)
  content       String
  thumbnail     String?  @db.VarChar(255)
  spaceId       String   @map("space_id") @db.VarChar(66)
  created       String   @db.VarChar(255)
  publishStatus String
  /// [TimelineEvent]
  events        Json[]
  admins        String[]
  tags          String[]
  priority      Int      @default(50) @map("priority")
  timelineStyle String?  @db.VarChar(255)

  @@map("timelines")
}

model Course {
  id                String   @id @unique @db.VarChar(255)
  key               String
  spaceId           String   @map("space_id") @db.VarChar(256)
  title             String   @db.VarChar(256)
  summary           String
  details           String
  duration          String   @db.VarChar(256)
  highlights        String[]
  publishStatus     String   @map("publish_status") @db.VarChar(66)
  thumbnail         String
  courseAdmins      String[] @map("course_admins")
  coursePassContent String?  @map("course_pass_content")
  courseFailContent String?  @map("course_fail_content")
  coursePassCount   Int?     @map("course_pass_count")
  prority           Int?     @default(50) @map("prority")
  topicConfig       Json     @map("topic_config")
  /// [CourseTopics]
  topics            Json[]
  space             Space    @relation(fields: [spaceId], references: [id])

  @@map("courses")
}

model ShortVideo {
  id          String   @id @db.VarChar(255)
  spaceId     String   @map("space_id") @db.VarChar(64)
  priority    Int      @default(20) @map("priority")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  title       String   @db.VarChar(255)
  description String
  videoUrl    String   @map("video_url") @db.VarChar(1024)
  thumbnail   String   @db.VarChar(1024)
  archive     Boolean? @default(false)

  @@map("short_videos")
}
